# CBIST (충북과학기술혁신원) 스크래퍼 개발 인사이트

## 사이트 정보
- **URL**: http://www.cbist.or.kr/home/sub.do?mncd=1131
- **사이트 코드**: cbist
- **사이트 이름**: (재)충북과학기술혁신원 사업공고 게시판
- **개발일**: 2025-07-09

## 사이트 구조 분석

### 1. 페이지 구조
- **목록 페이지**: 테이블 형태의 게시판 (table.board)
- **페이지네이션**: 하단 페이지네이션 바를 통한 페이지 이동
- **게시글 수**: 페이지당 10개 게시글
- **총 게시글 수**: 940개 (94페이지)

### 2. 게시글 목록 구조
- **테이블 구조**: `table.board > tbody > tr`
- **제목 셀**: `td.board_title > a.title`
- **작성자**: `td.board_write` (주로 "관리자")
- **등록일**: `td.board_date`
- **공고기간**: 두 번째 `td.board_date`
- **공고상태**: `td.board_status` (진행중, 종료 등)
- **첨부파일**: `td.board_file` (아이콘 링크)

### 3. 상세 페이지 구조
- **URL 형태**: `sub.do?mncd=1131&mode=view&no={post_id}`
- **내용 영역**: `td.substance` - 게시글 본문
- **첨부파일**: `div[id^="fileDiv"]` - 각 파일별 div
- **파일 링크**: `board/download.do?mncd=1131&fno={file_id}&bid={board_id}&did={doc_id}`

## 기술적 특징

### 1. URL 패턴
- **기본 URL**: `http://www.cbist.or.kr/home/sub.do?mncd=1131`
- **페이지네이션**: `?mncd=1131&page={page_num}`
- **상세 페이지**: `?mncd=1131&mode=view&no={post_id}`
- **첨부파일**: `/home/board/download.do?mncd=1131&fno={file_id}&bid={board_id}&did={doc_id}`

### 2. 첨부파일 처리
- **다운로드 방식**: 직접 다운로드 링크 방식
- **파일 형식**: 주로 HWP, PDF, ZIP, Excel 파일
- **한글 파일명**: UTF-8 완전 지원
- **파일 크기**: 다양한 크기 (최소 22KB ~ 최대 5.5MB)

### 3. 콘텐츠 특성
- **언어**: 한국어
- **파일 형식**: 주로 공문서 형태의 HWP 파일
- **내용**: 정부기관 사업공고, 지원사업 안내
- **공고 상태**: 예정, 진행중, 종료 상태 표시

## 개발 과정에서 발견한 문제점과 해결책

### 1. URL 구성 문제
**문제**: 상대 URL 처리 오류
- 초기에는 `?mncd=1131&mode=view&no=60085382` 형태의 상대 URL을 잘못 처리
- `http://www.cbist.or.kr/home/?mncd=1131&mode=view&no=60085382` 형태로 잘못 구성

**해결**: 정확한 URL 구성
```python
full_url = f"{self.base_url}/home/sub.do{post_href}"
```

### 2. 첨부파일 다운로드 문제
**문제**: 초기 404 오류
- 첨부파일 URL이 상대경로로 제공되어 절대경로 변환 실패
- `https://www.cbist.or.kr/board/download.do` 형태로 잘못 구성

**해결**: 올바른 첨부파일 URL 구성
```python
if file_href.startswith('/'):
    file_url = f"{self.base_url}{file_href}"
else:
    file_url = f"{self.base_url}/home/{file_href}"
```

### 3. 한글 파일명 처리
**문제**: 한글 파일명 깨짐 현상 없음
- 이 사이트는 한글 파일명을 UTF-8로 완전히 지원
- 파일명에 특수문자나 공백이 포함된 경우도 정상 처리

**해결**: 추가 처리 불필요
- 파일명을 그대로 사용해도 문제없음

## 스크래핑 결과 분석

### 1. 수집 성과
- **총 게시글**: 30개 (3페이지)
- **총 첨부파일**: 65개
- **성공률**: 100% (모든 게시글과 첨부파일 성공적으로 수집)

### 2. 파일 분포
- **HWP 파일**: 대부분 (공문서 형태)
- **PDF 파일**: 일부 (공고문, 안내서)
- **ZIP 파일**: 제출서류 템플릿 모음
- **Excel 파일**: 평가표, 결과보고서 템플릿
- **PNG 파일**: 포스터 이미지

### 3. 파일 크기 분석
- **최소 크기**: 22KB (Excel 파일)
- **최대 크기**: 5.5MB (ZIP 파일)
- **평균 크기**: 약 200KB
- **중복 파일**: 몇 개의 동일한 크기 파일 존재 (재공고 등으로 인한 중복 가능성)

## 최적화 포인트

### 1. 성능 최적화
- **요청 간격**: 1초 간격으로 설정하여 서버 부하 최소화
- **세션 유지**: requests.Session() 사용으로 연결 재사용
- **타임아웃**: 30초 타임아웃 설정

### 2. 오류 처리
- **HTML 응답 감지**: Content-Type 확인
- **파일 크기 검증**: 1KB 미만 파일의 HTML 여부 확인
- **자동 재시도**: 없음 (안정성 우선)

### 3. 데이터 품질
- **마크다운 변환**: html2text 사용으로 가독성 향상
- **메타데이터**: 게시글 ID, 수집 시간 등 추가 정보 저장
- **파일 구조**: 체계적인 디렉토리 구조 (post_id_title 형태)

## 향후 개선 방안

### 1. 기능 확장
- **전체 페이지 스크래핑**: 94페이지 전체 수집 옵션
- **필터링**: 날짜, 상태별 필터링 기능
- **중복 감지**: 파일 해시 비교를 통한 중복 제거

### 2. 모니터링
- **로그 분석**: 상세한 로그 기록 및 분석
- **성능 모니터링**: 수집 속도 및 성공률 추적
- **알림 기능**: 오류 발생 시 알림 시스템

### 3. 데이터 활용
- **검색 기능**: 수집된 데이터의 전문 검색
- **분석 도구**: 사업공고 트렌드 분석
- **API 제공**: 수집된 데이터의 API 서비스

## 결론

CBIST 사이트는 상대적으로 표준적인 게시판 구조를 가지고 있어 스크래핑이 용이했습니다. 특히 한글 파일명을 완전히 지원하고 있어 별도의 인코딩 처리가 필요하지 않았습니다. 

주요 성공 요인:
1. 명확한 DOM 구조
2. 일관된 URL 패턴
3. 안정적인 서버 응답
4. 표준 HTTP 다운로드 방식

이러한 특성 덕분에 높은 성공률과 안정성을 확보할 수 있었습니다.